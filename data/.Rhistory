"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
#View(shots_grouped_)
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_grouped$shot_chart_zone
export_$player <- player
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
klay <- get_info_player_season("Klay Thompson", "2016-17")
player
player <- "Klay Thompson"
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
View(shots_grouped)
View(shots_grouped)
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
View(shots_grouped_)
export <- shots_grouped_[,5:8]
View(export)
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped$la <- league_averages$fg_pct
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
View(shots_grouped_)
getJSON <- function(player, season){
player_id <- find_player_by_name(player)$person_id
dir <- "http://stats.nba.com/stats/shotchartdetail?Period=0&VsConference=&LeagueID=00&LastNGames=0&TeamID=0&Position=&Location=&Outcome=&ContextMeasure=FGA&DateFrom=&StartPeriod=&DateTo=&OpponentTeamID=0&ContextFilter=&RangeType=&"
season_str <- paste0("Season=", season, "&")
dir2 <- "AheadBehind=&"
player_str <- paste0("PlayerID=", player_id, "&")
dir3 <- "EndRange=&VsDivision=&PointDiff=&RookieYear=&GameSegment=&Month=0&ClutchTime=&StartRange=&EndPeriod=&SeasonType=Regular+Season&SeasonSegment=&GameID=&PlayerPosition="
dir_final <- paste0(dir, season_str, dir2, player_str, dir3)
return(dir_final)
}
parseJson <- function(data){
raw_shots_data = data$resultSets[[1]]$rowSet
col_names = tolower(as.character(data$resultSets[[1]]$headers))
if (length(raw_shots_data) == 0) {
shots = data.frame(
matrix(nrow = 0, ncol = length(col_names))
)
}else {
shots = data.frame(
matrix(
unlist(raw_shots_data),
ncol = length(col_names),
byrow = TRUE
)
)
}
shots = tbl_df(shots)
names(shots) = col_names
cols <- c('shot_zone_area', 'shot_zone_range')
# Creamos la variable shot_chart_zone (para poder visualizar luego)
shots$shot_chart_zone <- apply( shots[ , cols ] , 1 , paste , collapse = " | " )
shots$shot_made_numeric <- ifelse(shots$shot_made_flag == "0", 0, 1)
shots$shot_attempted_numeric <- ifelse(shots$shot_attempted_flag == "0", 0, 1)
return(shots)
}
league_averages_f <- function(data){
raw_league_avg_data = data$resultSets[[2]]$rowSet
league_avg_names = tolower(as.character(data$resultSets[[2]]$headers))
league_averages = tbl_df(data.frame(
matrix(unlist(raw_league_avg_data), ncol = length(league_avg_names), byrow = TRUE)
))
names(league_averages) = league_avg_names
cols = c("shot_zone_area", "shot_zone_range")
league_averages$shot_chart_zone <- apply( league_averages[ , cols ] , 1 , paste , collapse = " | " )
#league_averages$shot_made_numeric <- ifelse(league_averages$fgm == "0", 0, 1)
#league_averages$shot_attempted_numeric <- ifelse(league_averages$fga == "0", 0, 1)
league_averages$fga <- as.numeric(as.character(league_averages$fga))
league_averages$fgm <- as.numeric(as.character(league_averages$fgm))
league_averages <- league_averages %>%
group_by(shot_chart_zone) %>%
mutate(fga = as.numeric(fga), fgm = as.numeric(fgm)) %>%
summarize(fga = sum(fga), fgm = sum(fgm), fg_pct = 100*sum(fgm)/sum(fga))
return(league_averages)
}
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
export <- shots_grouped_[,5:8]
View(export)
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_grouped$shot_chart_zone
export_$player <- player
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
klay <- get_info_player_season("Klay Thompson", "2016-17")
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
green <- get_info_player_season("Draymond Green", "2016-17")
warriors <- rbind(curry, klay, durant, green)
warriors <- rbind(curry, klay)
View(curry)
View(klay)
View(durant)
View(green)
warriors <- rbind(curry, klay)
View(curry)
View(klay)
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_grouped$shots_types
export_$player <- player
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_types
export_$player <- player
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
green <- get_info_player_season("Draymond Green", "2016-17")
warriors <- rbind(curry, klay, durant, green)
View(warriors)
View(export_)
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_types
export_$player <- player
export_$attribute <- rownames(export_)
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
green <- get_info_player_season("Draymond Green", "2016-17")
warriors <- rbind(curry, klay, durant, green)
View(warriors)
setwd("C:/Users/jaguirre/Downloads/MASTER/Módulo III/Visualización de información/NBA")
write.csv(export_, file="warriors.csv")
setwd("C:/Users/jaguirre/Downloads/MASTER/Módulo III/Visualización de información/NBA/data")
setwd("C:/Users/jaguirre/Downloads/MASTER/Módulo III/Visualización de información/NBA/data")
write.csv(curry, file="curry.csv")
write.csv(klay, file="klay.csv")
write.csv(durant, file="durant.csv")
write.csv(green, file="green.csv")
write.csv(curry, file="curry.csv")
View(curry)
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- league_averages$fg_pct
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_types
#export_$player <- player
#export_$attribute <- rownames(export_)
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
green <- get_info_player_season("Draymond Green", "2016-17")
warriors <- rbind(curry, klay, durant, green)
View(warriors)
setwd("C:/Users/jaguirre/Downloads/MASTER/Módulo III/Visualización de información/NBA/data")
write.csv(curry, file="curry.csv")
write.csv(klay, file="klay.csv")
write.csv(durant, file="durant.csv")
write.csv(green, file="green.csv")
View(curry)
View(curry)
View(green)
View(green)
return_dataset <- function(shots, league_averages, player){
shots_grouped <- shots %>%
group_by(shot_chart_zone) %>%
summarize(MadeMean = mean(shot_made_numeric),
MadeTotal = sum(shot_made_numeric),
TriedTotal = sum(shot_attempted_numeric)) %>%
mutate(ShotsMadeTried = paste(MadeTotal, TriedTotal, sep = "/"),
ShotsPerc = as.character(round(MadeMean*100, 1)),
dst = as.character(round((100*TriedTotal / sum(TriedTotal)),1)))
shots_types <- c(
"Back Court(BC) | Back Court Shot",
"Center(C) | 16-24 ft.",
"Center(C) | 24+ ft.",
"Center(C) | 8-16 ft.",
"Center(C) | Less Than 8 ft.",
"Left Side Center(LC) | 16-24 ft.",
"Left Side Center(LC) | 24+ ft.",
"Left Side(L) | 16-24 ft.",
"Left Side(L) | 24+ ft.",
"Left Side(L) | 8-16 ft.",
"Right Side Center(RC) | 16-24 ft.",
"Right Side Center(RC) | 24+ ft.",
"Right Side(R) | 16-24 ft.",
"Right Side(R) | 24+ ft.",
"Right Side(R) | 8-16 ft.")
shots_grouped_ <- shots_grouped[0,]
for (shot_type in shots_types){
if(nrow(shots_grouped[shots_grouped$shot_chart_zone == shot_type,]) == 0){
row <- c(shot_type, 0, 0, 0, "0/0", 0,0)
#shots_grouped[nrow(shots_grouped) + 1, ]
}else{
row <- shots_grouped[shots_grouped$shot_chart_zone == shot_type,]
}
shots_grouped_[nrow(shots_grouped_)+1,] <- row
}
shots_grouped_$la <- round(league_averages$fg_pct, 1)
export <- shots_grouped_[,5:8]
export_ <- as.data.frame(t(export))
colnames(export_) <- shots_types
#export_$player <- player
#export_$attribute <- rownames(export_)
return(export_)
}
get_info_player_season <- function(player, season){
data <- fromJSON(file=getJSON(player, season))
shots <- parseJson(data)
league_averages <- league_averages_f(data)
player_info <- return_dataset(shots, league_averages, player)
return(player_info)
}
curry <- get_info_player_season("Stephen Curry", "2016-17")
klay <- get_info_player_season("Klay Thompson", "2016-17")
durant <- get_info_player_season("Kevin Durant", "2016-17")
green <- get_info_player_season("Draymond Green", "2016-17")
warriors <- rbind(curry, klay, durant, green)
View(warriors)
View(curry)
setwd("C:/Users/jaguirre/Downloads/MASTER/Módulo III/Visualización de información/NBA/data")
write.csv(curry, file="curry.csv")
write.csv(klay, file="klay.csv")
write.csv(durant, file="durant.csv")
write.csv(green, file="green.csv")
View(klay)
View(klay)
View(warriors)
